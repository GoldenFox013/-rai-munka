using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MySql.Data.MySqlClient;

namespace gyak
{
    internal class Program
    {
         public static string connection = "server=localhost;database=gokard;user=root;password=;";
        static void Main(string[] args)
        {
            Console.WriteLine("Üdv a gokard oldalán!");

            Console.WriteLine("Válasszon egy műveletet!\n\t1. Foglalás\n\t2. Foglalások\n\t3. Összes bevétel\n\t4. Csoportosítás\n\t5. Módosítás");
            int beker = int.Parse(Console.ReadLine());

            switch (beker)
            {
                case 1:
                    Adatbeker();
                    break;
                case 2:
                    Kiolvas();
                    break;
                case 3:
                    Bevetel();
                    break;
                case 4:
                    Csoportositas();
                    break;
                case 5:
                    Modositas();
                    break;
            }
























            Console.ReadKey();
        }
        static void Adatbeker()
        {
            Console.Write("Add meg a neved: ");
            string nev = Console.ReadLine();
            Console.Write("Hány főre foglal? ");
            int jegyek = int.Parse(Console.ReadLine());
            Console.Write("Adja meg a dátumot: ");
            DateTime datum = Convert.ToDateTime(Console.ReadLine());
            try
            {
                using (MySqlConnection conn = new MySqlConnection(connection))
                {
                    conn.Open();
                    string query = "INSERT INTO vasarlok(nev, jegyek, datum) VALUES(@nev, @jegyek, @datum);";
                    using (MySqlCommand cmd = new MySqlCommand(query, conn))
                    {
                        cmd.Parameters.AddWithValue("@nev", nev);
                        cmd.Parameters.AddWithValue("@jegyek", jegyek);
                        cmd.Parameters.AddWithValue("@datum", datum);
                        cmd.ExecuteNonQuery();
                        Console.WriteLine("Sikeres volt a rendelés!");
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Hiba történt: " + ex.Message);
            }
        }
        static void Kiolvas()
        {
            try
            {
                using (MySqlConnection conn = new MySqlConnection(connection))
                {
                    conn.Open();
                    string query = "SELECT * FROM vasarlok;";
                    using (MySqlCommand cmd = new MySqlCommand(query, conn))
                    {
                        using (MySqlDataReader reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                string nev = reader.GetString("nev");
                                int jegyek = reader.GetInt32("jegyek");
                                DateTime datum = reader.GetDateTime("datum");

                                Console.WriteLine($"Név: {reader["nev"]}, Jegyek: {reader["jegyek"]}, Dátum: {reader["datum"]}");
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Hiba történt: " + ex.Message);
            }
        }
        static void Bevetel()
        {
            try
            {
                using (MySqlConnection conn = new MySqlConnection(connection))
                {
                    conn.Open();
                    string query = "SELECT SUM(jegyek) AS osszes FROM vasarlok;";
                    using (MySqlCommand cmd = new MySqlCommand(query, conn))
                    {
                        using (MySqlDataReader reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                int jegyek = reader.GetInt32("osszes");

                                Console.WriteLine($"Az össz bevétel: {jegyek * 5600} Ft");
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Hiba történt: " + ex.Message);
            }
        }
        static void Csoportositas()
        {
            try
            {
                using (MySqlConnection conn = new MySqlConnection(connection))
                {
                    conn.Open();
                    string query = "SELECT nev, (5600*jegyek) AS fizet FROM vasarlok GROUP BY nev ORDER BY fizet;";
                    using (MySqlCommand cmd = new MySqlCommand(query, conn))
                    {
                        using (MySqlDataReader reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                string nev = reader.GetString("nev");
                                int jegyek = reader.GetInt32("fizet");

                                Console.WriteLine($"{reader["nev"]}, {jegyek}");
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Hiba történt: " + ex.Message);
            }
        }
        static void Modositas()
        {
            Console.Write("Melyiket akarod módosítani? ");
            string reginev = Console.ReadLine();
            Console.Write("Add meg a nevet: ");
            string ujnev = Console.ReadLine();
            Console.Write("Add meg a jegyek számát: ");
            int jegyek = int.Parse(Console.ReadLine());
            Console.Write("Add meg a dátumot: ");
            DateTime datum = Convert.ToDateTime(Console.ReadLine());
            try
            {
                using (MySqlConnection conn = new MySqlConnection(connection))
                {
                    conn.Open();
                    string query = "UPDATE vasarlok SET nev=@ujnev, jegyek=@jegyek, datum=@datum WHERE nev=@reginev;";
                    using (MySqlCommand cmd = new MySqlCommand(query, conn))
                    {
                        cmd.Parameters.AddWithValue("@reginev", reginev);
                        cmd.Parameters.AddWithValue("@ujnev", ujnev);
                        cmd.Parameters.AddWithValue("@jegyek", jegyek);
                        cmd.Parameters.AddWithValue("@datum", datum);
                        cmd.ExecuteNonQuery();
                        Console.WriteLine("Sikeres volt az adatmódosítás!");
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Hiba történt: " + ex.Message);
            }
        }
        static void Torles()
        {
            Console.Write("Add meg a törlendő személy nevét: ");
            string nev = Console.ReadLine();

            try
            {
                using (MySqlConnection conn = new MySqlConnection(connection))
                {
                    conn.Open();
                    string query = "DELETE FROM vasarlok WHERE nev=@nev;";
                    using(MySqlCommand cmd = new MySqlCommand( query, conn))
                    {

                    }
                }
            }
            catch (Exception ex) { Console.WriteLine("Hiba történt: " + ex.Message); }
    }
}
